// <auto-generated />
using System;
using AWWW_lab2_gr2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AWWW_lab2_gr2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240321193201_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lead")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("authorId")
                        .HasColumnType("int");

                    b.Property<int>("categoriesId")
                        .HasColumnType("int");

                    b.Property<int?>("matchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("authorId");

                    b.HasIndex("categoriesId");

                    b.HasIndex("matchId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("articleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("articleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<string>("Statium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.MatchEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<int>("eventTypeId")
                        .HasColumnType("int");

                    b.Property<int>("matchId")
                        .HasColumnType("int");

                    b.Property<int?>("matchPlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("eventTypeId");

                    b.HasIndex("matchId");

                    b.HasIndex("matchPlayerId");

                    b.ToTable("MatchEvents");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.MatchPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("matchId")
                        .HasColumnType("int");

                    b.Property<int>("playerId")
                        .HasColumnType("int");

                    b.Property<int>("positionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("matchId");

                    b.HasIndex("playerId");

                    b.HasIndex("positionId");

                    b.ToTable("MatchPlayers");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("teamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("teamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FoundingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("leagueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("leagueId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ArticleTag", b =>
                {
                    b.Property<int>("articlesId")
                        .HasColumnType("int");

                    b.Property<int>("tagsId")
                        .HasColumnType("int");

                    b.HasKey("articlesId", "tagsId");

                    b.HasIndex("tagsId");

                    b.ToTable("ArticleTag");
                });

            modelBuilder.Entity("PlayerPosition", b =>
                {
                    b.Property<int>("playerId")
                        .HasColumnType("int");

                    b.Property<int>("positionId")
                        .HasColumnType("int");

                    b.HasKey("playerId", "positionId");

                    b.HasIndex("positionId");

                    b.ToTable("PlayerPosition");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Article", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.Author", "author")
                        .WithMany("articles")
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Category", "categories")
                        .WithMany("articles")
                        .HasForeignKey("categoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Match", "match")
                        .WithMany("articles")
                        .HasForeignKey("matchId");

                    b.Navigation("author");

                    b.Navigation("categories");

                    b.Navigation("match");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Comment", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.Article", "article")
                        .WithMany("comments")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("article");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Match", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.Team", "AwayTeam")
                        .WithMany("AwayMatches")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Team", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.MatchEvent", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.EventType", "eventType")
                        .WithMany("matchEvents")
                        .HasForeignKey("eventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Match", "match")
                        .WithMany("matchEvents")
                        .HasForeignKey("matchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.MatchPlayer", "matchPlayer")
                        .WithMany("matchEvents")
                        .HasForeignKey("matchPlayerId");

                    b.Navigation("eventType");

                    b.Navigation("match");

                    b.Navigation("matchPlayer");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.MatchPlayer", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.Match", "match")
                        .WithMany("matchPlayers")
                        .HasForeignKey("matchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Player", "player")
                        .WithMany("matchPlayers")
                        .HasForeignKey("playerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Position", "position")
                        .WithMany("matchPlayers")
                        .HasForeignKey("positionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("match");

                    b.Navigation("player");

                    b.Navigation("position");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Player", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.Team", "team")
                        .WithMany("player")
                        .HasForeignKey("teamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("team");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Team", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.League", "league")
                        .WithMany("teams")
                        .HasForeignKey("leagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("league");
                });

            modelBuilder.Entity("ArticleTag", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.Article", null)
                        .WithMany()
                        .HasForeignKey("articlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("tagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlayerPosition", b =>
                {
                    b.HasOne("AWWW_lab2_gr2.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("playerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWWW_lab2_gr2.Models.Position", null)
                        .WithMany()
                        .HasForeignKey("positionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Article", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Author", b =>
                {
                    b.Navigation("articles");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Category", b =>
                {
                    b.Navigation("articles");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.EventType", b =>
                {
                    b.Navigation("matchEvents");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.League", b =>
                {
                    b.Navigation("teams");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Match", b =>
                {
                    b.Navigation("articles");

                    b.Navigation("matchEvents");

                    b.Navigation("matchPlayers");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.MatchPlayer", b =>
                {
                    b.Navigation("matchEvents");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Player", b =>
                {
                    b.Navigation("matchPlayers");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Position", b =>
                {
                    b.Navigation("matchPlayers");
                });

            modelBuilder.Entity("AWWW_lab2_gr2.Models.Team", b =>
                {
                    b.Navigation("AwayMatches");

                    b.Navigation("HomeMatches");

                    b.Navigation("player");
                });
#pragma warning restore 612, 618
        }
    }
}
